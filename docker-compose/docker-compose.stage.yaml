services:
  redis:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - 6379:6379
      - 8001:8001
    restart: unless-stopped
    volumes:
      - auth-redis-data:/data
  authi1:
    image: faizulmustafiz/node-express-auth-typescript-boilerplate:<image-tag>
    container_name: auth-i-1
    ports:
      - 6010:3030
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - APP_VERSION=1.0.0
      - APP_INSTANCE=1
    volumes:
      - ./container-logs:/app/dist/src/v1/logs
    depends_on:
      - redis
  authi2:
    image: faizulmustafiz/node-express-auth-typescript-boilerplate:<image-tag>
    container_name: auth-i-2
    ports:
      - 6020:3030
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - APP_VERSION=1.0.0
      - APP_INSTANCE=2
    volumes:
      - ./container-logs:/app/dist/src/v1/logs
    depends_on:
      - redis
  authi3:
    image: faizulmustafiz/node-express-auth-typescript-boilerplate:<image-tag>
    container_name: auth-i-3
    ports:
      - 6030:3030
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - APP_VERSION=1.0.0
      - APP_INSTANCE=3
    volumes:
      - ./container-logs:/app/dist/src/v1/logs
    depends_on:
      - redis
  authi4:
    image: faizulmustafiz/node-express-auth-typescript-boilerplate:<image-tag>
    container_name: auth-i-4
    ports:
      - 6040:3030
    restart: unless-stopped
    environment:
      - NODE_ENV=staging
      - APP_VERSION=1.0.0
      - APP_INSTANCE=4
    volumes:
      - ./container-logs:/app/dist/src/v1/logs
    depends_on:
      - redis
  nginx:
    build: ./src/v1/nginx
    image: nginx-image
    container_name: nginx
    ports:
      - 8080:80
    depends_on:
      - authi1
      - authi2
      - authi3
      - authi4
volumes:
  auth-redis-data: